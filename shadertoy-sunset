void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Fix screen and remap UV coords
    vec2 uv = fragCoord/iResolution.xy;
    uv = uv * 2.0 - 1.0;
    float aspectRatio = iResolution.x / iResolution.y;
    uv.x *= aspectRatio;
        
    // BG
    vec3 color = mix(vec3(.4 + sin(iTime) * .2,0.0,0.3), vec3(0.0,1.0,1.0),uv.y + sin(iTime)); // Change this use distance so it's a radial gradient
    
    // Sun
    float sunRadius = .2;
    float sunInner = .4;    
    float sunOutter = sunInner + sunRadius; 

    float sunLerp = distance(uv, vec2(0.0, -.5 + sin(iTime))); // Coords of circle origin, this needs to be a uniform
    sunLerp = smoothstep(sunOutter, sunInner, sunLerp);
    vec3 sunClr = vec3(1.0,1.0,0.0); 
    
    // Wave
    float waveF = 2.0;
    float waveA = 0.1 * sin(iTime);
    float waveVertOffset = -.5;
    float secondWave = sin(uv.x * (7.0 + sin(iTime))) * (.2 * cos(iTime)); // Could possibly use arrays + struct for waves and the variables of each wave

    float waveLerp = waveVertOffset + sin(uv.x * waveF+iTime) * waveA  + secondWave;
    waveLerp = step(waveLerp,uv.y);

    vec3 waveFgClr = mix(vec3(0.3,0.00,0.80), vec3(0.30,0.65,1.00), uv.y * 2.0);    
    
    // Mixing
    color = mix(color, sunClr, sunLerp);
    color = mix(waveFgClr, color, waveLerp);
    
    // Final Output
    fragColor = vec4(color,1.0);
}
